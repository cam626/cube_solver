function [net, inputData] = trainMovePredictor(trainingCubes, trainingMoves, trainingCubesTransformed, numEpochs, validationData, net)
%     layers = [featureInputLayer(55)
%                 fullyConnectedLayer(500)
%                 reluLayer
%                 fullyConnectedLayer(54)
%                 regressionLayer];

    inputData = [trainingCubes trainingMoves];
%     opts = trainingOptions("sgdm", ...
%         "Plots", "training-progress", ...
%         "MaxEpochs", numEpochs, ...
%         "Verbose", 0, ...
%         "LearnRateSchedule", "piecewise", ...
%         "LearnRateDropPeriod", 5, ...
%         "InitialLearnRate", 0.01);
    opts = trainingOptions("adam", ...
        "Plots", "training-progress", ...
        "MaxEpochs", numEpochs, ...
        "Verbose", 0, ...
        "ValidationData", validationData, ...
        "ValidationFrequency", 650, ...
        "Shuffle", "every-epoch");
    
    net = trainNetwork(inputData, trainingCubesTransformed, net.Layers, opts);
end